import os
import numpy as np
import pandas as pd
import json
 

#convert xlsx files to csv
folder_path = '/Users/Gisele/Downloads/code practice'
output_folder = '/Users/Gisele/Downloads/output practice'

for filename in os.listdir(folder_path):
    if filename.endswith('.xlsx'):
        file_path = os.path.join(folder_path, filename)
        df = pd.read_excel(file_path)
        csv_filename = filename.replace('.xlsx', '.csv')
        csv_file_path = os.path.join(output_folder, csv_filename)
        df.to_csv(csv_file_path, index=False)


#combine newly converted csv files into a big data frame
dataframes = []

for filename in os.listdir(output_folder):
    if filename.endswith('.csv'): 
        file_path = os.path.join(output_folder, filename)
        df = pd.read_csv(file_path)
        dataframes.append(df)

combined_table = pd.concat(dataframes, ignore_index = True)


#perform matrix transformations on df
def vote_data_transform(data):
    bill_matrix = data.iloc[:, 1:6]
    vote_matrix = data.iloc[:, 6:106]

    bill_matrix_transposed = bill_matrix.T

    result = np.matmul(bill_matrix_transposed, vote_matrix)
    return result

new_mat = vote_data_transform(combined_table)

json_file_path = '/Users/Gisele/Downloads/gaza legislative scorecard/json_output'
new_mat.to_json(json_file_path, orient= 'records', indent=4)




#use this for table with average votescore by category
s_dat = pd.read_csv('/Users/Gisele/Downloads/gaza legislative scorecard/Smrithi Votesheet - Smrithi Votesheet.csv')
s_dat
bill_matrix1 = s_dat.iloc[:, 1]
vote_matrix = s_dat.iloc[:, 6:106]

bill_matrix_transposed1 = bill_matrix1.T

result = np.matmul(bill_matrix_transposed1, vote_matrix)
np.mean(result)

weight_matrix = s_dat.iloc[:, 1:6]
vote_matrix = s_dat.iloc[:, 6:106]

pivot_results = pd.DataFrame()
for i in range(weight_matrix.shape[1]):
    weight_column = weight_matrix.iloc[:, i]

    weighted_scores = vote_matrix.mul(weight_column, axis=0)
    average_scores = weighted_scores.mean(axis=1)

    pivot_results[f'Category_{i+1}'] = average_scores

pivot_results.index=s_dat.index

pivot_results
